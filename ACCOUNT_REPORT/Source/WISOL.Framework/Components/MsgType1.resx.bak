<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>11, 15</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v19.2" name="DevExpress.Utils.v19.2, Version=19.2.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imgList.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v19.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxOS4yLCBWZXJzaW9uPTE5LjIu
        My4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAADIAAAAyAAAACQUAAAAP
        BQAAAN4TAAACgwMAAIlQTkcNChoKAAAADUlIRFIAAAAyAAAAMggGAAAAHj+IsQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAMlSURBVGhD3ZlPbxJBGMbXtode9KKNxsT0AvvuAgn9Bhww
        JD03/RjeOPRGosZjox70O7SnHps04aoXg8BSIJqGpNJUPXpoExGfWV6twAvtsjND65P8Lsy7M+/DzM6/
        dUyo6br5pue9PSSq1Yl+1D2v1yD61vC8MtjqED3k0Ouj/ubmYkBURILVQ8/rR4LoHM/tBb7/mKuzr2om
        cx8GWmKCM4Kee3a0urrMTZhVO5FYwb/4UUpEEz8xLF9yc/rVd5xbMPBcaNgIaOuslU5nuXk92lHvgeed
        SA0ah+gNpxFP+GcyYgMWQQ6Vci63xClF13E6/QgV9UYrngeYvo85rWj6pHqC6FqY+IvrdkqOs8ApXq4d
        x1kUK4pIM5sdQ4qLBNE+pzldPDtpebG73e4Qx5WKGBeZZLLI6U6WzinWmBHwGQsypzyuD2trK9JDs2LS
        yNSXH72hdcU2aUSBPdo6p34htXeSguNg2ghe/FNO/0L4UesGUGHcCMAoctnCYCsuBcXFhhGsLSdsI+yN
        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
</value>
  </data>
</root>